apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  timeout: 15m
  interval: 30m
  install:
    crds: Create
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "76.5.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      interval: 12h
  driftDetection:
    mode: enabled
    ignore:
      # Ignore "validated" annotation which is not inserted during install
      - paths: ["/metadata/annotations/prometheus-operator-validated"]
        target:
          kind: PrometheusRule
  valuesFrom:
    - kind: ConfigMap
      name: flux-kube-state-metrics-config
      valuesKey: kube-state-metrics-config.yaml
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    installCRDs: true
    alertmanager:
      enabled: true
      alertmanagerSpec:
        resources:
          requests:
            cpu: 400m
            memory: 400Mi
        storage:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 1Gi
              # storageClassName: "longhorn-crypto-per-volume" # Optional
    prometheus:
      prometheusSpec:
        retention: 24h
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
        # podMonitorSelector:
        #   matchLabels:
        #     app.kubernetes.io/component: monitoring
        podMonitorNamespaceSelector: {} # Empty selector matches all namespaces[6][8]
        podMonitorSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              # storageClassName: "longhorn-crypto-per-volume"
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 15Gi
        additionalScrapeConfigs:
          - job_name: "ceph-mgr"
            scrape_interval: 15s
            static_configs:
              - targets:
                  [
                    "192.168.178.40:9283",
                    "192.168.178.41:9283",
                    "192.168.178.42:9283",
                  ]
    grafana:
      grafana.ini:
        dashboards:
          default_home_dashboard_path: /tmp/dashboards/kube-overview.json
        server:
          root_url: "https://grafana.lan.vandelocht.uk"
        auth:
          # disable_login_form: true # Redirects all users to OIDC login
          disable_signout_menu: false
        auth.generic_oauth:
          enabled: true
          name: Keycloak
          allow_sign_up: true
          client_id: "grafana"
          scopes: "openid profile email offline_access roles"
          email_attribute_path: email
          login_attribute_path: username
          name_attribute_path: full_name
          auth_url: "https://keycloak.vandelocht.uk/realms/k8s/protocol/openid-connect/auth"
          token_url: "https://keycloak.vandelocht.uk/realms/k8s/protocol/openid-connect/token"
          api_url: "https://keycloak.vandelocht.uk/realms/k8s/protocol/openid-connect/userinfo"
          role_attribute_path: "contains(realm_access.roles[*], 'grafana-admin') && 'Admin' || contains(realm_access.roles[*], 'grafana-editor') && 'Editor' || 'Viewer'"
      defaultDashboardsEnabled: false
      admin:
        existingSecret: "grafana-secret"
        userKey: admin-user
        passwordKey: admin-password
      additionalDataSources:
        - name: InfluxDB
          type: influxdb
          url: http://192.168.178.153:80
          access: proxy
          isDefault: false
          jsonData:
            version: Flux
            organization: HomeLab
          secureJsonData:
            token: ${INFLUXDB_TOKEN}

      envFromSecret: grafana-env-secret
      # persistence:
      #   enabled: true
      #   # storageClassName: "longhorn-crypto-per-volume"
      #   size: 1Gi
# ---
# apiVersion: helm.toolkit.fluxcd.io/v2
# kind: HelmRelease
# metadata:
#   name: prometheus-pushgateway
# spec:
#   timeout: 15m
#   interval: 30m
#   install:
#     crds: Create
#     remediation:
#       retries: 3
#   upgrade:
#     crds: CreateReplace
#     remediation:
#       retries: 3
#   chart:
#     spec:
#       chart: prometheus-pushgateway
#       version: "2.15.0"
#       sourceRef:
#         kind: HelmRepository
#         name: prometheus-community
#         namespace: monitoring
#       interval: 12h
#   values:
#     service:
#       type: LoadBalancer
#       port: 9091
#       targetPort: 9091
#       portName: http
#     serviceMonitor:
#       enabled: true
#     persistentVolume:
#       enabled: true
#       size: 2Gi
