apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: authelia
  namespace: authelia
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`auth.vandelocht.uk`)
      kind: Rule
      services:
        - name: authelia
          port: 80
  tls:
    secretName: auth-vandelocht-uk-production-tls
---
apiVersion: 'traefik.containo.us/v1alpha1'
kind: 'Middleware'
metadata:
  name: 'forwardauth-authelia' # name of middleware as it appears in Traefik, and how you reference in ingress rules
  namespace: 'traefik' # name of namespace that Traefik is in
  labels:
    app.kubernetes.io/instance: 'authelia'
    app.kubernetes.io/name: 'authelia'
spec:
  forwardAuth:
    address: 'http://authelia.authelia.svc.cluster.local/api/authz/forward-auth'
    authResponseHeaders:
      - 'Remote-User'
      - 'Remote-Groups'
      - 'Remote-Email'
      - 'Remote-Name'
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: auth-vandelocht-uk
  namespace: authelia
spec:
  secretName: auth-vandelocht-uk-production-tls
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "auth.vandelocht.uk"
  dnsNames:
  - "auth.vandelocht.uk"
