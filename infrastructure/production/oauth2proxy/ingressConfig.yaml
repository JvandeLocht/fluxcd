apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: oauth2proxy
  namespace: oauth2proxy
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`oauth2proxy.vandelocht.uk`)
      kind: Rule
      services:
        - name: oauth2proxy-oauth2-proxy
          port: 80
      middlewares:
        - name: svc-oauth2proxy-headers
  tls:
    secretName: oauth2proxy-vandelocht-uk-production-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: oauth2proxy-vandelocht-uk
  namespace: oauth2proxy
spec:
  secretName: oauth2proxy-vandelocht-uk-production-tls
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "oauth2proxy.vandelocht.uk"
  dnsNames:
    - "oauth2proxy.vandelocht.uk"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: svc-oauth2proxy-headers
  namespace: oauth2proxy
spec:
  headers:
    browserXssFilter: true
    contentTypeNosniff: true
    forceSTSHeader: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 15552000
    customFrameOptionsValue: SAMEORIGIN
    customRequestHeaders:
      X-Forwarded-Proto: https
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: forward-auth-keycloak
  namespace: oauth2proxy
spec:
  forwardAuth:
    address: http://oauth2proxy-oauth2-proxy.oauth2proxy.svc.cluster.local/oauth2
    trustForwardHeader: true
    authResponseHeaders:
      - "X-Auth-Request-User"
      - "X-Auth-Request-Email"
      - "Authorization"
