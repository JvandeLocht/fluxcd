---
apiVersion: v1
kind: Namespace
metadata:
  name: traefik
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: traefik
  namespace: traefik
spec:
  interval: 5m0s
  url: https://traefik.github.io/charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: traefik
  namespace: traefik
spec:
  timeout: 15m
  interval: 30m
  install:
    crds: Create
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  chart:
    spec:
      chart: traefik
      version: "36.2.0"
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: traefik
      interval: 12h
  values:
    globalArguments:
      - "--global.sendanonymoususage=false"
      - "--global.checknewversion=false"

    additionalArguments:
      - "--serversTransport.insecureSkipVerify=true"
      - "--log.level=INFO"
      # - "--entryPoints.metrics.address=:8082"
      - "--entrypoints.websecure.transport.respondingTimeouts.readTimeout=3600s"
      - "--entrypoints.websecure.transport.respondingTimeouts.idleTimeout=3600s"

    deployment:
      enabled: true
      replicas: 3
      # annotations: {}
      # podAnnotations: {}
      # additionalContainers: []
      # initContainers: []

    ports:
      web:
        redirections:
          entryPoint:
            to: websecure
            scheme: https
            permanent: true
      websecure:
        tls:
          enabled: true
      # metrics:
      #   port: 8082
      #   expose:
      #     default: true
      #   exposedPort: 8082
      #   protocol: TCP

    ingressRoute:
      dashboard:
        enabled: false

    providers:
      kubernetesCRD:
        enabled: true
        ingressClass: traefik-external
        allowExternalNameServices: true
        allowCrossNamespace: true
      kubernetesIngress:
        enabled: true
        allowExternalNameServices: true
        publishedService:
          enabled: false

    rbac:
      enabled: true

    service:
      enabled: true
      type: LoadBalancer
      # annotations: {}
      # labels: {}
      # loadBalancerSourceRanges: []
      # externalIPs: []

    metrics:
      addInternals: true
      prometheus:
        enabled: true
        addEntryPointsLabels: true
        addServicesLabels: true
        addRoutersLabels: true
        service:
          enabled: true
        disableAPICheck: true
        serviceMonitor:
          enabled: true
          # namespace: monitoring
          additionalLabels:
            release: kube-prometheus-stack
          metricRelabelings:
            - sourceLabels: [__name__]
              separator: ;
              regex: ^fluentd_output_status_buffer_(oldest|newest)_.+
              replacement: $1
              action: drop
          relabelings:
            - sourceLabels: [__meta_kubernetes_pod_node_name]
              separator: ;
              regex: ^(.*)$
              targetLabel: nodename
              replacement: $1
              action: replace
          jobLabel: traefik
          interval: 30s
          honorLabels: true
        prometheusRule:
          enabled: true
          rules:
            - alert: TraefikDown
              expr: up{job="traefik"} == 0
              for: 5m
              labels:
                context: traefik
                severity: warning
              annotations:
                summary: "Traefik Down"
                description: "{{ $labels.pod }} on {{ $labels.nodename }} is down"
