apiVersion: v1
kind: Namespace
metadata:
  name: endurain
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: endurain
  name: endurain
  namespace: endurain
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: endurain
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: endurain
    spec:
      # fsGroup ensures mounted volumes are writable by the group
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      initContainers:
        # Init container to ensure directories exist with correct permissions
        - name: init-permissions
          image: busybox
          command: ['sh', '-c']
          args:
            - |
              echo "Setting up directories..."
              # Create subdirectories if needed
              mkdir -p /app/backend/data
              mkdir -p /app/backend/logs
              # Set ownership to user/group 1000
              chown -R 1000:1000 /app/backend/data
              chown -R 1000:1000 /app/backend/logs
              echo "Directory permissions set"
          volumeMounts:
            - mountPath: /app/backend/data
              name: endurain-data-claim
            - mountPath: /app/backend/logs
              name: endurain-logs-claim
          securityContext:
            runAsUser: 0  # Run as root to set permissions
      containers:
        - name: endurain-app
          image: ghcr.io/joaovitoriasilva/endurain:v0.13.4
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /app/backend/data
              name: endurain-data-claim
            - mountPath: /app/backend/logs
              name: endurain-logs-claim
          envFrom:
            - configMapRef:
                name: env
            - secretRef:
                name: endurain-secrets
          env:
            # Explicitly set UID and GID to match what we're using
            - name: UID
              value: "1000"
            - name: GID
              value: "1000"
      volumes:
        - name: endurain-data-claim
          persistentVolumeClaim:
            claimName: endurain-data-claim
        - name: endurain-logs-claim
          persistentVolumeClaim:
            claimName: endurain-logs-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: endurain-data-claim
  name: endurain-data-claim
  namespace: endurain
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: endurain-logs-claim
  name: endurain-logs-claim
  namespace: endurain
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: endurain
  name: endurain
  namespace: endurain
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: endurain
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: endurain-env
  name: env
  namespace: endurain
data:
  BEHIND_PROXY: "true"
  ENDURAIN_HOST: https://train.vandelocht.uk
  DB_DATABASE: endurain
  DB_USER: endurain
  DB_HOST: endurain-postgres-cluster-rw
  TZ: Europe/Berlin
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: endurain-postgres-cluster
  namespace: endurain
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:17
  bootstrap:
    initdb:
      database: endurain
      owner: endurain
      secret:
        name: endurain-cnpg

  storage:
    size: 10Gi
  monitoring:
    enablePodMonitor: true
